{"version":3,"sources":["minimax.js","tictactoe.js","multiplayer.js","App.js","serviceWorker.js","index.js","patterns.js"],"names":["checkscore","require","minimax","board","depth","maxMode","value","i","gameOver","bestVal","Infinity","length","Math","max","min","module","exports","bestMove","moveVal","check","Grid","x","result","grid","pattern","handleClick","Finish","className","map","val","onClick","gridClass","includes","TicTacToe","state","full","bind","onReset","updateBot","checkRes","newGrid","this","setState","filter","res","pos","console","log","class","Component","Multiplayer","Display","href","target","rel","to","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","patterns","checkpattern","iLen","j","k","pat","p","JSON","stringify","patX","patO","push","matchX","matchO"],"mappings":"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","file":"static/js/main.60235698.chunk.js","sourcesContent":["const { checkscore } = require('./patterns')\n\n\nfunction gameOver(board) {\n    for(let i in board) {\n        if(board[i] === \"\")\n        {return false}\n    }\n    return true\n}\n\nfunction minimax(board, depth, maxMode)\n{   \n    let value = checkscore(board)\n    \n    if (value === 10 || value === -10) {\n        return value\n    }\n\n    if (gameOver(board) === true) {\n        return 0\n    }\n\n    if(maxMode) {\n        let bestVal = -Infinity\n        for(let i = 0; i < board.length; i++) {\n            if ( board[i] === \"\") {\n                board[i] = \"O\"\n                value = minimax(board, depth+1, false)\n                bestVal = Math.max(bestVal, value)\n                board[i] = \"\"\n            }\n        }\n\n        return bestVal\n    }\n\n    else {\n        let bestVal = Infinity\n        for(let i = 0; i< board.length; i++) {\n            if( board[i] === \"\" ) {\n                board[i] = \"X\"\n                value = minimax(board, depth+1, true)\n                bestVal = Math.min(bestVal, value)\n                board[i] = \"\"\n            }\n        }\n\n        return bestVal\n    }\n}\n\nfunction bestMove(board) {\n    let bestVal = -Infinity\n    let bestMove = -1\n    let moveVal = -Infinity\n    \n    for(let i = 0; i < board.length; i++) {\n        \n        if(board[i] !== \"\")\n        { continue }\n        \n        board[i] = \"O\"\n        moveVal = minimax(board, 0, false)\n        board[i] = \"\"\n        if(moveVal > bestVal)\n        {\n            bestVal = moveVal\n            bestMove = i\n        }\n\n                \n    }\n\n    // console.log(`Best Move is to Position ${bestMove}`)\n    // console.log(`Value =  ${bestVal}`)\n\n    return bestMove\n}\n\n\nmodule.exports = bestMove","import React, {Component} from 'react';\nimport './tictactoe.css';\nvar { check } =  require(\"./patterns\")\nvar bestMove = require(\"./minimax\")\n\nclass TicTacToe extends Component {\n    constructor() {\n      super()\n      this.state = { grid: [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"], x: true, full: false, result: null, pattern: null };\n      this.handleClick = this.handleClick.bind(this);\n      this.onReset = this.onReset.bind(this);\n      this.updateBot = this.updateBot.bind(this);\n      this.checkRes = this.checkRes.bind(this);\n    }\n\n    updateBot() {\n      let newGrid = [...this.state.grid]\n      let pos = bestMove(newGrid)\n      newGrid[pos] = 'O'\n      let full = this.checkRes(newGrid)\n      this.setState({grid: newGrid, x: true, full: full})\n    }\n\n    checkRes(grid = this.state.grid) {\n      let full = grid.filter(val => val===\"\").length === 0\n      \n      let {res, pattern} = check(grid)\n     \n      if(res === 'X') {\n        this.setState({result: 'X', pattern: pattern}) \n      }\n      if(res === 'O') {\n        this.setState({result: 'O', pattern: pattern}) \n      }\n      if(res === 'D' && full===true) {\n        this.setState({result: 'D'}) \n      }\n       return full\n    }\n\n    handleClick(pos) {\n      if (this.state.grid[pos]===\"\" && this.state.result===null) {\n      let val = this.state.x?'X':'O'\n      \n      let grid = this.state.grid\n      grid[pos] = val\n      \n      let full = this.checkRes()\n      this.setState({grid: grid, x:!this.state.x, full: full})\n      console.log({grid: grid, x:!this.state.x, full: full})\n      this.updateBot()\n     }\n\n\n    }\n\n    onReset() {\n      this.setState({ grid: [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"], x: true, full: false, result: null, pattern: null })\n    }\n\n    render () {\n      return (\n        <div className=\"fix-grid\">\n        <Grid x = {this.state.x} result={this.state.result} grid={this.state.grid} pattern={this.state.pattern} handleClick={this.handleClick}/>\n        <button class=\"reset\" onClick={this.onReset}>RESET</button>\n        </div>\n    );\n  }\n}\n\n\nfunction Grid({ x, result, grid, pattern, handleClick}) {\n  if(result === null)\n  {\n    return (\n      <div>\n        <center><Finish result={\"\"} /></center>\n      <div className=\"grid-container\">\n      {\n        grid.map((val, i) => {\n          return (\n          <div className=\"grid-item hover\" onClick={() => handleClick(i)}>{grid[i]===\"O\"?\"🤖\":(grid[i]===\"X\"?\"🤸‍♀️\":grid[i])}</div>\n          );\n        })\n      }\n      </div>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n    <center><Finish result={result} /></center>\n    <div className=\"grid-container\">\n    {\n      grid.map((val, i) => {\n        let gridClass = \"grid-item\"\n        if(pattern!=null && pattern.includes(i)){\n          gridClass = \"gsel\"\n        }\n        \n        return(\n          <div className={gridClass} onClick={() => handleClick(i)}>{grid[i]===\"O\"?\"🤖\":(grid[i]===\"X\"?\"🤸‍♀️\":grid[i])}</div>\n        );\n      })\n    }\n    </div>\n    </div>\n  );\n}\n\n\nfunction Finish({ result }) {\n  if(result === '')\n  {\n    return(<h1 className=\"hide\">Bla</h1>)\n  }\n\n  if(result === 'D')\n  {\n    return(<h1 className=\"over\">Draw!</h1>)\n  }\n\n  if(result === 'X')\n  {\n    return(<h1 className=\"over\">You Win</h1>)\n  }\n\n  if(result === 'O')\n  {\n    return(<h1 className=\"over\">Bot Wins!</h1>)\n  }\n}\n\nexport default TicTacToe;","import React from 'react';\nimport { render } from '@testing-library/react';\n\nfunction Multiplayer() {\n    \n        return(<h1>Multiplayer</h1>);\n       \n}\n\nexport default Multiplayer\n\n","import React, { Component } from 'react';\nimport TicTacToe from './tictactoe';\nimport Multiplayer from './multiplayer'\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Switch>\n        <Route path = \"/multiplayer\">\n          <Multiplayer />\n        </Route>\n      </Switch>\n      <Route path = \"/bot\">\n          <TicTacToe/>\n      </Route>\n      <Display />\n    </div>\n\n    </Router>\n  );\n}\n}\nfunction Display () {\n    return (\n    <Router>\n      <div className=\"App\">\n      <div className=\"display\">\n      <div className=\"header\">\n        Tic-Tac-Toe\n      </div>  \n      <div className=\"links\">by <a href=\"https://eeshashetty.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">@eeshashetty</a></div>\n      <div className=\"buttons\">\n      <Link to = \"/multiplayer\"><button className=\"btn left\">Multiplayer</button></Link>\n      <Link to = \"/bot\"><button className=\"btn right\">Bot Mode 🤖</button></Link>\n      </div>\n      </div>\n            </div>\n    </Router>\n    );\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const patterns = [[0,1,2], [3,4,5], [6,7,8], [0,3,6], [1,4,7], [2,5,8], [0,4,8], [2,4,6]]\n\nfunction checkpattern(pattern) {\n    if(pattern.length<3)\n    { return false; }\n    let iLen = 0\n    if(pattern.length<6)\n    {iLen = pattern.length%3}\n    else \n    {iLen = pattern.length - (pattern.length%3)*3 }\n    \n    for(let i = 0; i <= iLen; i++)\n    {   for(let j = i+1; j <= pattern.length - (pattern.length%2)*2; j++)\n            {   for(let k = j+1; k < pattern.length; k++)\n                    {   \n                        let pat = [pattern[i], pattern[j], pattern[k]]\n                        let match =  patterns.filter(p => JSON.stringify(p) === JSON.stringify(pat))\n                        if(match.length>0)\n                        { return match }\n                    }\n                \n            }\n    }\n    return []\n}\n\nfunction check(grid) {\n    let patX = []\n    let patO = []\n    for(let pos = 0; pos < grid.length; pos++) {\n        if(grid[pos]===\"X\") {\n            patX.push(pos)\n        }\n        if(grid[pos]===\"O\") {\n            patO.push(pos)\n        }\n    }\n        let matchX = checkpattern(patX)\n        let matchO = checkpattern(patO)\n       \n        if(matchX.length>0)\n        {return {res: 'X', pattern: matchX[0]}}\n\n        if(matchO.length>0)\n        {return {res: 'O', pattern: matchO[0]}}\n    \n\n    return {res: 'D', pattern: []}\n}\n\nfunction checkscore(grid) {\n    let value = 0\n\n    if (check(grid).res === 'X') {\n        value = -10\n    }\n    \n    if (check(grid).res === 'O') {\n        value = 10\n    }\n\n    return value\n\n}\n\nmodule.exports = {check, checkscore}"],"sourceRoot":""}